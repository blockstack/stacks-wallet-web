name: Integration tests

on: [pull_request]

env:
  CI: true
  WALLET_ENVIRONMENT: testing

jobs:
  directories:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs
        working-directory: ./tests/integration
        run: echo "::set-output name=dir::$(ls -d */ | jq -R -s -c 'split("\n")[:-1]')"

  test-integration:
    runs-on: ubuntu-latest
    needs: [directories]
    strategy:
      matrix:
        dir: ${{ fromJson(needs.directories.outputs.dir) }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        name: Cache node_modules
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - uses: actions/cache@v2
        name: Cache playwright
        id: cache-playwright-browsers
        with:
          path: '~/.cache/ms-playwright'
          key: playwright-browser

      - uses: actions/cache@v1
        name: Cache Jest cache
        id: cache-jest-cache
        with:
          path: '.jest-cache'
          key: ${{ runner.os }}--jest-integration

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install packages
        uses: ./.github/actions/provision
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Install browser binaries
        uses: nick-invision/retry@v2
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        with:
          timeout_seconds: 600
          max_attempts: 5
          retry_on: error
          command: node node_modules/playwright/install.js

      - name: Install playwright deps
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: yarn playwright install-deps chromium

      - name: Build assets
        run: yarn build:test

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Serve and run tests
        run: xvfb-run --auto-servernum -- yarn jest --config=./jest.integration.config.js --runInBand --testPathPattern=./tests/integration/${{ matrix.dir }}* --detectOpenHandles

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-screenshots-${{ steps.date.outputs.date }}
          path: tests/screenshots/
