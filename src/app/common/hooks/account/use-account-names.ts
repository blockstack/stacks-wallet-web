import { useMemo } from 'react';

import { isUndefined } from '@shared/utils';

import { parseIfValidPunycode } from '@app/common/utils';
import { getAutogeneratedAccountDisplayName } from '@app/common/utils/get-account-display-name';
import {
  useCurrentAccountNames,
  useGetAccountNamesByAddressQuery,
} from '@app/query/stacks/bns/bns.hooks';
import { useCurrentStacksAccount } from '@app/store/accounts/blockchain/stacks/stacks-account.hooks';

export function useCurrentAccountDisplayName() {
  const account = useCurrentStacksAccount();
  const { data: names = [] } = useCurrentAccountNames();

  return useMemo(() => {
    if (isUndefined(account?.index) && (!account || typeof account?.index !== 'number'))
      return 'Account';
    if (names[0]) return parseIfValidPunycode(names[0]);
    return getAutogeneratedAccountDisplayName(account?.index);
  }, [account, names]);
}

export function useAccountDisplayName({ address, index }: { index: number; address: string }) {
  const { data: names = [], isLoading } = useGetAccountNamesByAddressQuery(address);
  return useMemo(() => {
    const name = names[0] || getAutogeneratedAccountDisplayName(index);
    return {
      name,
      isLoading,
    };
  }, [names, index, isLoading]);
}
