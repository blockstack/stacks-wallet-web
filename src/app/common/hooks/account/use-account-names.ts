import { useMemo } from 'react';

import { useGetBnsNamesOwnedByAddressQuery } from '@leather.io/query';
import { isUndefined } from '@leather.io/utils';

import { parseIfValidPunycode } from '@app/common/utils';
import { formatAccountName } from '@app/common/utils/format-account-name';
import { getAutogeneratedAccountDisplayName } from '@app/common/utils/get-account-display-name';
import { useCurrentStacksAccount } from '@app/store/accounts/blockchain/stacks/stacks-account.hooks';

export function useCurrentAccountDisplayName() {
  const account = useCurrentStacksAccount();
  const names = useGetBnsNamesOwnedByAddressQuery(account?.address ?? '').data?.names;

  return useMemo(() => {
    if (isUndefined(account?.index) && (!account || typeof account?.index !== 'number'))
      return 'Account';
    if (names?.length && names[0]) return parseIfValidPunycode(names[0]);
    return getAutogeneratedAccountDisplayName(account?.index);
  }, [account, names]);
}

export function useAccountDisplayName({ address, index }: { index: number; address: string }) {
  const query = useGetBnsNamesOwnedByAddressQuery(address, {
    select: resp => {
      const names = resp.names ?? [];
      return formatAccountName(names[0]) || getAutogeneratedAccountDisplayName(index);
    },
  });

  return {
    ...query,
    data: query.data || getAutogeneratedAccountDisplayName(index),
  };
}
