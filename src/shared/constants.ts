import { ChainID } from '@stacks/transactions';

import { IS_TEST_ENV } from './environment';
import { Blockchains } from './models/blockchain.model';

export const gaiaUrl = 'https://hub.blockstack.org';

export const POPUP_CENTER_WIDTH = 442;
export const POPUP_CENTER_HEIGHT = 646;

export const HIGH_FEE_AMOUNT_STX = 5;

export const DEFAULT_FEE_RATE = 400;

export const PERSISTENCE_CACHE_TIME = 1000 * 60 * 60 * 12; // 12 hours

export const BTC_DECIMALS = 8;
export const STX_DECIMALS = 6;

export const KEBAB_REGEX = /[A-Z\u00C0-\u00D6\u00D8-\u00DE]/g;

export const MICROBLOCKS_ENABLED = !IS_TEST_ENV && true;

export const GITHUB_ORG = 'hirosystems';
export const GITHUB_REPO = 'stacks-wallet-web';

export enum DefaultNetworkConfigurationIds {
  mainnet = 'mainnet',
  testnet = 'testnet',
  devnet = 'devnet',
}

export type DefaultNetworkConfigurations = keyof typeof DefaultNetworkConfigurationIds;

interface BaseChainConfig {
  blockchain: Blockchains;
}

interface BitcoinChainConfig extends BaseChainConfig {
  blockchain: 'bitcoin';
  url: string;
}

interface StacksChainConfig extends BaseChainConfig {
  blockchain: 'stacks';
  url: string;
  chainId: ChainID;
}

export interface NetworkConfiguration {
  name: string;
  id: DefaultNetworkConfigurations;
  chain: {
    bitcoin: BitcoinChainConfig;
    stacks: StacksChainConfig;
  };
}

export enum DefaultNetworkModes {
  mainnet = 'mainnet',
  testnet = 'testnet',
}

export type NetworkModes = keyof typeof DefaultNetworkModes;

const DEFAULT_SERVER_MAINNET = 'https://stacks-node-api.stacks.co';
export const DEFAULT_SERVER_TESTNET = 'https://stacks-node-api.testnet.stacks.co';

export const BITCOIN_API_BASE_URL_MAINNET = 'https://blockstream.info/api';
export const BITCOIN_API_BASE_URL_TESTNET = 'https://blockstream.info/testnet/api';

export const BITCOIN_TEST_ADDRESS = '';

const networkMainnet: NetworkConfiguration = {
  id: DefaultNetworkConfigurationIds.mainnet,
  name: 'Mainnet',
  chain: {
    stacks: {
      blockchain: 'stacks',
      chainId: ChainID.Mainnet,
      url: DEFAULT_SERVER_MAINNET,
    },
    bitcoin: {
      blockchain: 'bitcoin',
      url: BITCOIN_API_BASE_URL_MAINNET,
    },
  },
};

const networkTestnet: NetworkConfiguration = {
  id: DefaultNetworkConfigurationIds.testnet,
  name: 'Testnet',
  chain: {
    stacks: {
      blockchain: 'stacks',
      chainId: ChainID.Testnet,
      url: DEFAULT_SERVER_TESTNET,
    },
    bitcoin: {
      blockchain: 'bitcoin',
      url: BITCOIN_API_BASE_URL_TESTNET,
    },
  },
};

const networkDevnet: NetworkConfiguration = {
  id: DefaultNetworkConfigurationIds.devnet,
  name: 'Devnet',
  chain: {
    stacks: {
      blockchain: 'stacks',
      chainId: ChainID.Testnet,
      url: 'http://localhost:3999',
    },
    bitcoin: {
      blockchain: 'bitcoin',
      url: BITCOIN_API_BASE_URL_TESTNET,
    },
  },
};

export const defaultCurrentNetwork: NetworkConfiguration = networkMainnet;

export const defaultNetworksKeyedById: Record<
  DefaultNetworkConfigurationIds,
  NetworkConfiguration
> = {
  [DefaultNetworkConfigurationIds.mainnet]: networkMainnet,
  [DefaultNetworkConfigurationIds.testnet]: networkTestnet,
  [DefaultNetworkConfigurationIds.devnet]: networkDevnet,
};

export enum QueryRefreshRates {
  VERY_SLOW = 120_000,
  SLOW = 30_000,
  MEDIUM = 10_000,
  FAST = 3_500,
}

export const DEFAULT_LIST_LIMIT = 50;

export const CEX_ADDRESSES = [
  'SP1P72Z3704VMT3DMHPP2CB8TGQWGDBHD3RPR9GZS',
  'SP3HXJJMJQ06GNAZ8XWDN1QM48JEDC6PP6W3YZPZJ',
  'SPNBYP1MY456K29804XHT4PY5QKMSXNRBHGADTDY',
  'SP3RFAZMSH6YA1KTJD7DN997AG2DG54E3Z9ZJWYN8',
  'SPX8T06E8FJQ33CX8YVR9CC6D9DSTF6JE0Y8R7DS',
  'SP3SPE6W7VTGM622ZDBYKJ26XQ2R5VN9DDQXFYSVR',
  'SPC3T2E3MXHA15Q1TRQJDH57QX6X1D5D7Y9XTXXJ',
  'SP1FNEJ21BMJCJYEJM2F73QT6WD2MN9MB2J92FZBN',
  'SP33XEHK2SXXH625VG6W6665WBBPX1ENQVKNEYCYY',
  'SP1PJWKS5V3X7JR300J3W291DDNCKD6M6XKJFYPAC',
  'SPXJJ6XPRV52JREBENWFX7TG1CFPFP0QS81BDH0A',
  'SPFPBQ30DZ2G4CX8XZGZXD013N2NPHH7K7SB7GEZ',
  'SM21NR8W96KGG4YCFXRHZ6EAR2PAY3NS0MQ3FK95T',
  'SP1RWW86QN0KKZYZAZ5K4NJX4BQQCVWVSR7CXW5XA',
  'SP335ZC3W6M308ZKTSCCBMR54GWA20RSXCKJPZC59',
  'SP1Q9S8J351ZMSV3SAHB88CRP9MD2X71WHSAR83AB',
  'SP111MNWTSXGTD0ESMV59WX4KHQA93RTV9F82EK0K',
  'SP1VZB1N7YFBRNX4CC0WAYWY5MHEXYXYF56QH4F1A',
  'SM468VETKA5DB15HWG2QM7Y04EFQKV44R9D6D0QC',
  'SP32QTYYGG6SWTP198FST4SPM85J0A3JPNB9S2BEA',
  'SP27ANV45PCAG98PGFA2GVN9K7QYY1KWWS1V6RFSX',
  'SP2VK9TBG8E20A0YW228PC70GBMSBFHE7BNVMKB57',
  'SP2GHPX871GG50BE72CNFZZ0FJM5JQ5GPDKM4T2RC',
  'SPEJYD1YTYKK0RBQH200TV7X7ZJC8KMAA5D3SXX3',
  'SPYABDY1GR8RPQVNK1VFD1CQP6MZT2GF4Q9QB19F',
  'SP2BE8YZF117DZX8FTZQ0072GQ8VET2PPPQC58YFJ',
  'SP3C9JPPGYZV04QF3J0N3ME7KN5NDVF79AZ96HR1',
  'SP22GF51PH2HRMWME1HJMDB54VFY5YMZXCMXKZ26V',
  'SP3Z7511VWR5WG9J3MAKER3NRZYKWT83K2XTP36EV',
  'SP3ATSKXC6M2DMN001W20D2GSNEJDX1NXP6N85JEP',
  'SM3DGPERE6T07F1TN1BAR01P62SWYJDAAAE7YYCQ',
  'SP2ST741GVK200RYK9NKTYP6CJH1AG4ZPV4A5WG4M',
  'SP1G01K04TVDFY635HSTHNWNQSEWSR5CZF12KAXG4',
  'SP2J02RVJPTKVN81YF9TFPGWEJPHMA79VS5TWGGVK',
  'SP24K6H0FE6Q2QDKAB2YZPE220TE534SPM288D59B',
  'SP12E5REG9ZPB91V61A8V4P8XJ63EK3VT058YWZAS',
  'SP3J9CPJJQW12Y08MDSQZDX81YMB40QCSZ1AMVFQV',
  'SPH7P46DMTTFNSHDD33N6G8GFE1MQB2R0QW176B1',
  'SPZ1WQQ3R94QT4T5FP2WE5HA7B8MGGH4VFAVB9NY',
  'SP2HVP68NY5BD2RDFX0JNXSYRS8AA6R7S30N08NJZ',
  'SP1H45JS07GWQWMT57JE20X17AQCNVYAS7NHW2HVR',
  'SP18XC4F27VQ8P2QGKZ5P6KR41GK77ZVFWV468P1',
  'SP8TP159Z6V3MN5YGXYV6D5KRDH7D28TYVNJ2QHR',
  'SP3M6D6M2BS7FNEFV111ZF6WQYATNJZ89Q7MXSPAE',
  'SP16CNZGZ20Y85GMWG01A9GYJ3ZHN4XFQJMSTEG8',
  'SPV48Q8E5WP4TCQ63E9TV6KF9R4HP01Z8WS3FBTG',
  'SPDXC0NM3YQDHV1HN3V9P5Y4P26QWY709NB86EYB',
  'SP329G766AV8Z01X9EEAHPDQ4WDJXT2A0XB383MGP',
  'SP78Q12M26WVN1V9DPQ29HVDTWPKQH6KVR1X0VEW',
  'SP3Z0BHS0SVP5733GDZ2RWJV1G2EW04PFN2NSX3PK',
  'SP3T7WAB5DMJ3JSRMCQF6SC7CG50DYYJVS4C303CN',
  'SPV00QHST52GD7D0SEWV3R5N04RD4Q1PMA3TE2MP',
  'SP2BBZNE2TZ5A56P3094JKTQCWCT13R61F8B8GXH8',
  'SP2F2KYSKAMT47ZGC4J1R2WB8E0GBF9GG088NJ66X',
  'SP2DY54XRX9GQEYXM5KM9RNE28BR7X4GKGC9DXSEA',
  'SP3E545ADCKY56EVCXZPA87525VM0ZA8DQQAEP77Z',
  'SP3Y6P2B33Y448WGCV6VR8CA8GCDXY6QBY5ZBZ13B',
  'SP2GD8MA2BVR0DJ3S6GW9BSXY3Q74YR9YS3JXKZDQ',
  'SP1X34E47XW77TWYFG6GX8G1SEN5E538T0WGBXZK6',
  'SP248HH800501WYSG7Z2SS1ZWHQW1GGH85ME34NT2',
  'SP2FHPJ3GMWM31MEQJSDWJTHA00QWMNPYMRZ56SPG',
  'SP081R49TDSQDXFSR8ZE6TAX6T96Z3B80TXNDV7T',
  'SPM1Q7YG18378H6W254YN8PABEVRPT38ZCY01SJD',
  'SP213KNHB5QD308TEESY1ZMX1BP8EZDPG4JWD0MEA',
  'SP9MZHJH0FQB746YZ7D22ZBHJFQVBYN8M8FQ4PCX',
  'SP32CF0E78JNPK0HYDTH3CCZ8FN76PFX5W0FYBN20',
  'SPBN3J1JST1K4MEZXZMV95ZXNBGMMKFZGJKY7VVC',
  'SP5NZFW1Z845XY8TX8VP60P0KEC3FRBQCDPBTFCP',
  'SP1WK5VPABSEEA9QSRGTV22YJDZRVHEW0NYERDZX9',
  'SP59YR7W1J8MRD1D21TE2YJCSXQ9FBT7SFARXFVB',
  'SP1XS9E70E81FGEEDMSXCEEPQ2XY94TNVFV1CRJVP',
  'SP32DFA3HXYZ2BV3P8H6XQM8EN94D2212QM71BRYG',
  'SP1NQ5AS213JFGAS78MF6BPRZ4Z6TENR59K96M67W',
  'SP3EYT7KF5ERWQFTWW3SWHS8QRYBNSMRZ7JW73YXR',
  'SP6RNRKT2QVEN9NXE66MDYXWB01SFNHMW9CVEM8T',
  'SP3297DBXPDGV2FZM8Z77FWA4RE55GY2QBS1CEN08',
  'SPQE3J7XMMK0DN0BWJZHGE6B05VDYQRXRMDV734D',
  'SPQP9F9YV90Y1MDXYF0VDBATAKZ21ER29KTEYPTC',
  'SP267TMY9MTMP98AW05X8RFQ43JRMTPGDWFKFCPTH',
  'SP136MDGWQTPYQ9CV89100ZB1MPMVNJEW3DDJMAE2',
  'SP2NDK60R7JKQ3SJ98CEHV2CMNDVTFBR541C4KV5Y',
  'SP1FPE0M7WYP0NCBX9FT5BJB2H5NRBTZ7Q27Y1RT0',
  'SP3WPZN2MN4MCESAFGBNX9YZD2JV1RJQRNMYZMMK6',
  'SP1SGWYFVJGHJDVHP90MM89W563DBQGK5N1QJ52T',
  'SPWR1705P8D1MWPE8VMESS4AHNSQ26DPJEV5KA1F',
  'SP35MEYYBHSFCFXY296YGP7NAT6Y4XBJW2VETR8AV',
  'SP2MDEE7BMXWTNST6PKE8MGP2EWD6412ZNPTYMQ5S',
  'SP16BTCDFS05EXR64GBM7SSMSSM4ZF4DVJ3B5JWHZ',
  'SPHM225DX5RXDPK630EDVRWDFBFG750MFDXVHKD4',
  'SP1J6WAPR86TA1YYJ2JV3HRT7YPKK7APHSZFK6FFK',
  'SP11M5XSC1C37PJ3BC6NEW81ND2PR5SA5Q0C8NS11',
  'SP3EQ7FQ8TFXB792P7VAGRXER0YNFMGM1Y8RS69RC',
  'SP1J58J25ZY6J9Z07EVHWXWJCNFGBRPPWYNM7W2WD',
  'SP1SS16QBKNXYNPH49RB8HJTJK8J2Q3X3AE55BKFB',
  'SP2W0KJMJB2601KK53Y7F8W9FV5YJ1QVCT0GBJHTA',
  'SP16JC5P00ZWKMS1YYBTWA9VX8ZQD1750HPFF3MTX',
  'SP36SKCSK6DA9D7NSAJATWX4XDVDP7994HH5CCTNB',
  'SP28C7M3C8A3JV77XKKM8CCVT1S0D8H8CRBTP5BYB',
  'SP2SSDNMJYWREZ4T0SRK9DEDDD5DMT094CBB87GSJ',
  'SP1JFTR7XH4BCYDD8XVXJ54P4HA1SJ87X1DWCM8SH',
];
